generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Priority {
  low
  medium
  high
}

model User {
  id                String             @id @default(cuid())
  username          String             @unique
  password          String
  createdAt         DateTime           @default(now())
  boardsCreated     Board[]            @relation("BoardCreator")
  boards            Board[]            @relation("BoardMembers")
  Task              Task[]
  pushSubscriptions PushSubscription[]
}

model Board {
  id        String    @id @default(cuid())
  content   String
  createdAt DateTime  @default(now())
  dueDate   DateTime?
  columns   Column[]
  creator   User      @relation("BoardCreator", fields: [creatorId], references: [id])
  creatorId String
  members   User[]    @relation("BoardMembers")
}

model Column {
  id      String @id @default(cuid())
  title   String
  board   Board  @relation(fields: [boardId], references: [id])
  boardId String
  tasks   Task[]
}

model Task {
  id         String   @id @default(cuid())
  title      String
  content    String?
  createdAt  DateTime @default(now())
  column     Column   @relation(fields: [columnId], references: [id])
  columnId   String
  assignedTo User?    @relation(fields: [userId], references: [id])
  userId     String?
  priority   Priority
}

model PushSubscription {
  id        String   @id @default(cuid())
  userId    String
  endpoint  String   @unique
  p256dh    String
  auth      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
